# content of: tox.ini , put in same dir as setup.py
[tox]

skip_missing_interpreters=True

envlist =
  # based on ros distro with python2 base
  py27-{indigo,kinetic,latest},
  py34-indigo,
  py35-kinetic,
  # check latest python with all distro, in case we get a late python on top of OS packages
  py36-{indigo,kinetic,latest}


#, pypy
#, pypy3

[travis]
python =

  # we test every current ROS1 distro on python 2.7 (official python support for ROS1)
  2.7: py27
  # specific old python supported natively on ubuntu/ROS LTS distro
  3.4: py34
  3.5: py35
  # we test every current ROS1 distro on latest python (to ensure support from latest python)
  3.6: py36

  # not tested yet
  #pypy = pypy
  #pypy3 = pypy3


# We depend on travis matrix
[travis:env]
ROS_DISTRO =
  kinetic: kinetic
  indigo: indigo
  latest: latest


[testenv]
setenv =
    # prevent tox to create a bunch of useless bytecode files in tests/
    PYTHONDONTWRITEBYTECODE=1

# Dependencies matching the version in each ROS distro
deps =

    indigo: -rrequirements/ROS/indigo.txt
    indigo: -rrequirements/tests.txt
    indigo: -rrequirements/dev.txt

    kinetic: -rrequirements/ROS/kinetic.txt
    kinetic: -rrequirements/tests.txt
    kinetic: -rrequirements/dev.txt

    latest: -rrequirements/tests.txt
    latest: -rrequirements/dev.txt

# to always force recreation and avoid unexpected side effects
recreate=True

changedir = tests

# to allow access to ROS packages
# sitepackages=True
# We do not want any access to system (same as basic travis python testing)

commands=
    # we want to make sure python finds the installed package in tox env
    # and doesn't confuse with pyc generated during dev (which happens if we use self test feature here)
    python -m pytest --basetemp={envtmpdir} test_pyros_server {posargs}
    python -m pytest --basetemp={envtmpdir} test_pyros_client {posargs}
    # testing various interfaces integration...
    # python -m pytest --basetemp={envtmpdir} test_pyros {posargs}
    # TODO : make target platforms tests possible in pure python somehow...

    # Note : -s here might break your terminal...

